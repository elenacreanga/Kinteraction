using System.Collections;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Kinect;

namespace Kinteract.Poses
{
    public class JointPath : IEnumerable<JointType>
    {
        private static readonly JointPath[,] PathBetween;

        public readonly JointType[] Points;

        static JointPath()
        {
            var nextInPath = new int[25, 25]
            {
                //0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ,11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
                /*00*/ {0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 12, 12, 12, 12, 16, 16, 16, 16, 1, 1, 1, 1, 1},
                /*01*/ {0, 1, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 20, 20, 20, 20, 20},
                /*02*/ {20, 20, 2, 3, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20},
                /*03*/ {2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                /*04*/ {20, 20, 20, 20, 4, 5, 5, 5, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 5, 5, 20, 20},
                /*05*/ {4, 4, 4, 4, 4, 5, 6, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4},
                /*06*/ {5, 5, 5, 5, 5, 5, 6, 7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 22, 5, 5},
                /*07*/ {6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 21, 6, 6, 6},
                /*08*/ {20, 20, 20, 20, 20, 20, 20, 20, 8, 9, 9, 9, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 9, 9},
                /*09*/ {8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 10, 10, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 10, 10},
                /*10*/ {9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 11, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 11, 24},
                /*11*/ {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 23, 10},
                /*12*/ {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 13, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                /*13*/ {12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 14, 14, 12, 12, 12, 12, 12, 12, 12, 12, 12},
                /*14*/ {13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 15, 13, 13, 13, 13, 13, 13, 13, 13, 13},
                /*15*/ {14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 14, 14, 14, 14, 14, 14, 14, 14, 14},
                /*16*/ {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 17, 17, 17, 0, 0, 0, 0, 0},
                /*17*/ {16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 18, 18, 16, 16, 16, 16, 16},
                /*18*/ {17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 19, 17, 17, 17, 17, 17},
                /*19*/ {18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 18, 18, 18, 18, 18},
                /*20*/ {1, 1, 2, 2, 4, 4, 4, 4, 8, 8, 8, 8, 1, 1, 1, 1, 1, 1, 1, 1, 20, 4, 4, 8, 8},
                /*21*/ {7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 21, 7, 7, 7},
                /*22*/ {6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 22, 6, 6},
                /*23*/ {11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 23, 11},
                /*24*/ {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 24}
            };

            PathBetween = new JointPath[25, 25];

            for (var start = 0; start < 25; start++)
            for (var end = 0; end < 25; end++)
            {
                var path = new List<int>();
                var current = start;
                while (nextInPath[current, end] != current)
                {
                    path.Add(current);
                    current = nextInPath[current, end];
                }
                PathBetween[start, end] = new JointPath(path.Select(i => (JointType) i));
            }
        }

        public JointPath(IEnumerable<JointType> points)
        {
            Points = points.ToArray();
        }

        public int Count => Points.Length;

        public JointType this[int index] => Points[index];

        public IEnumerator<JointType> GetEnumerator()
        {
            return (IEnumerator<JointType>) Points.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public static JointPath Between(JointType first, JointType last)
        {
            return PathBetween[(int) first, (int) last];
        }
    }
}